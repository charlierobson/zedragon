*************************************
*
*
*  THIS IS THE GENERAL SHELL PROGRAM
*
*   YOU SHOULD ASSEMBLE THIS PROGRAM
*   TO ATTACH YOUR TEST PROGRAM
*   TO THE DEBUGGING SYSTEM.
*
*   REFER TO THE DBUG DOCUMENTATION
*   FOR INSTRUCTIONS ON CUSTOMIZING
*   THIS PROGRAM FOR YOUR PARTICULAR
*   NEEDS.
*
*
*
*************************************
*
*
*
*             STEP 1
*
*   FIRST YOU HAVE TO DECIDE WHERE
*   DBUG AND YOUR CODE WILL RESIDE.
*
*   MY RECOMMENDATION IS TO LET DBUG
*   SIT RIGHT ON TOP OF DOS, AND IN A
*   SENSE, BE AN EXTENSION OF IT.
*
*   IN THIS CASE THE ORG STATEMENT
*   SETS DBUG TO BEGIN RIGHT WHERE
*   DOS STOPS. NOTE THIS IS THE 
*   STANDARD 2 DISK DRIVE DOS
*   CONFIGURATION.
*
*   IF YOU HAVE SPECIAL CONDITIONS
*   (FEWER DISK DRIVE BUFFERS, THE
*   850 ON, ... ) THEN CHANGE THE
*   ORG TO SUIT YOUR TASTES.
*
	ORG	$8800
*
*************************************
*
*	STEP 2
*
*   NOW YOU HAVE TO MAKE SURE THE
*   DBUG CODE IS ASSEMBLED.
*   HERE, IT IS ASSUMED THAT ALL
*   THE NECESSARY FILES ARE LOCATED
*   ON DRIVE 1.
*
DBUG	=	*
	PROC
	INCL	D3:DBUG.MAC
*
*************************************
*
*	STEP 3
*
*   THE NEXT FILE IS THE DISPLAY LIST
*   AND SCREEN AREA FOR DBUG.
*
*   THIS CODE TAKES UP JUST UNDER 1 K
*   OF MEMORY SPACE, AND HAS SOME
*   BOUNDARY CROSSING RESTRICTIONS.
*
*   NOTE THAT THE FOLLOWING ORG
*   STATEMENT ASSURES THAT THIS CODE
*   STARTS EITHER ON A 1 K BOUNDARY,
*   OR CLOSE ENOUGH SO THAT THERE IS
*   NO PROBLEM WITH OVERFLOW.
*
*   IF YOU WANT TO MOVE THE SCREEN
*   FOR SOME REASON, MODIFY THIS
*   STATEMENT.
*
*   NOTE ALSO THAT THE ICODE LABEL
*   IS USED TO DEFINE A SPOT TO 
*   STORE INITIALIZATION CODE.
*   9 BYTES ARE SAVED FOR THIS
*
	IF	[*-[[[HIGH *]/4]*1024]]>31
	ORG	[[[HIGH *]/4]+1]*1024
	ENDIF
*
	INCL	D3:DBGLST.MAC
	EPROC
ICODE	=	*
	ORG	*+9
*
*************************************
*
*	STEP 4
*
*   THE DBUG INITIALIZATION CODE SETS
*   UP A ROUTINE THAT MODIFIES THE
*   MEMLO POINTER WHENEVER THE RESET
*   BUTTON IS PRESSED.
*
*   NORMALLY THIS IS USED TO "HIDE"
*   THE DBUG CODE, AND MAKE THE FREE
*   MEMORY AREA START JUST AFTER DBUG
*
*   TO MODIFY THIS SET UP YOU WILL
*   HAVE TO DEFINE AN ECODE VALUE TO
*   BE PLACED IN THE MEMLO POINTER.
*
*   ONE SUGGESTION WOULD BE TO SIMPLY
*   PUT THE NORMAL VALUE THAT WOULD 
*   BE THERE ANYWAY.
*
*   FOR INSTANCE IN THE STANDARD DOS
*   CONFIGURATION, YOU MIGHT PUT
*   ECODE   =   $1CFC
*
ECODE	=	*
*
*************************************
*
*	STEP 5
*
*   NOW YOU HAVE TO ATTACH YOUR OWN
*   CODE. A COUPLE OF THINGS SHOULD
*   BE NOTED.
*
*   1. YOU SHOULD REMOVE ANY ORG
*      STATEMENTS FROM YOUR CODE
*      AND PLACE THEM HERE.
*      WITH NO NEW ORG STATEMENT,
*      YOUR CODE WILL FOLLOW THE
*      DBUG CODE.  CURRENTLY THAT
*      MEANS YOUR CODE WILL START
*      AT $33E9
*
*   2. REMOVE ANY END STATEMENT FROM
*      YOUR PROGRAM. IF NOT, IT WILL
*      DEFINITELY SCREW THINGS UP.
*
YOURORG	=	$4600

	INCL	D:SEADRAG
*
*************************************
*
*	STEP 6
*
*   IF YOU WANT TO DEFINE A MINI
*   SYMBOL TABLE, THIS IS THE SPOT.
*   THE ORG STATEMENT SHOULD SET THE
*   ORG TO WHEREEVER DBUG IS +3
*
*   RECALL THAT EACH SYMBOL NEEDS TO
*   BE DEFINE LIKE :
*
*     DB   'SYMBOL' ;6 CHARACTERS
*     DW   SYMBOL   ;SYMBOL LOCATION
*     DB   1        ;A 1 OR 2
*
	ORG	DBUG+3

	DB	'TXPOS0'
	DW	TXPOS
	DB	1

	DB	'TYPOS0'
	DW	TYPOS
	DB	1

	DB	'TXPOS1'
	DW	TXPOS+1
	DB	1

	DB	'TYPOS1'
	DW	TYPOS+1
	DB	1

	DB	'POSCNT'
	DW	POSCNT
	DB	2

	DB	'SCRVAL'
	DW	SCRVAL
	DB	1

	DB	'TEMPLO'
	DW	TEMPLO
	DB	2

	DB	'CALY  '
	DW	CALY
	DB	1

	DB	'MPTR  '
	DW	MPTR
	DB	1

	DB	'COLYPO'
	DW	COLYPOS
	DB	1

	DB	'COLMIN'
	DW	COLMIN
	DB	1

	DB	'MPFTMP'
	DW	MPFTMP
	DB	1

*
*************************************
*
*	STEP 7
*   NOW YOU HAVE TO TELL THE SYSTEM
*   WHERE TO GO TO RUN THE CODE
*
*   THE STRUCTURE WE HAVE HERE WILL
*   INITIALIZE DBUG, JUMP TO DBUG TO
*   ALLOW YOU TO SET UP INITIAL 
*   BREAKPOINTS, AND THEN JUMP TO
*   THE START OF YOUR CODE.
* 
	ORG	ICODE
	JSR	DBUGI   ;INITIALIZE DBUG
	JSR	DBUG   ;ENTER DBUG
	JMP	YOURORG ;AND RUN YOUR CODE
*
*
	END	ICODE
*
*************************************
